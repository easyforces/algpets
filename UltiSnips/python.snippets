snippet a_cnk "Cnk function"
def cnk(k, n):
    """
    Get cnk by cnk(k, n)
    """
    result = 1
    for i in range(n, n-k, -1):
        result *= i
    for i in range(1, k+1):
        result = result // i
    return result
$0
endsnippet

snippet a_gen_cnk "Cnk Generator"
def gen_cnk(max_n):
    """
    Get cnk by gen_cnk()[n][k]
    """
    nk = [[0 for _ in range(max_n+1)] for _ in range(max_n+1)]
    nk[0][0] = 1
    for n in range(1, max_n+1):
        nk[n][0] = 1
        for k in range(1, n+1):
            nk[n][k] = nk[n-1][k-1] + nk[n-1][k]
    return nk
$0
endsnippet

snippet a_list "Init a list"
= [$1] * len($0)
endsnippet

snippet a_list2 "Init a 2 dimontional list"
= [([$1] * len($2)) for _ in range(len($3))]$0
endsnippet

snippet a_cf
import string, copy


def solution():
    pass


def parser():
    $0


def output(s):
    print(s)


def main():
   args = parser()
   result = solution(*args)
   output(result)


if __name__ == '__main__':
    main()
endsnippet

snippet a_ir
= [int(s) for s in input().split(' ')]
endsnippet

snippet a_imr
nums = []
for _ in range($1):
    nums.append(int(input()))
endsnippet
